@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 84% 4.9%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 0%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 0%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 0%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 0 0% 25%;
    --input: 0 0% 25%;
    --ring: 214.3 31.8% 91.4%;
  }

  /* Apply the colors and variables to relevant elements */
  * {
    border-color: hsl(var(--border));
  }

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }

  input {
    background-color: hsl(var(--input));
    border-color: hsl(var(--border));
  }

  .card {
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
  }

  .popover {
    background-color: hsl(var(--popover));
    color: hsl(var(--popover-foreground));
  }

  .primary {
    background-color: hsl(var(--primary));
    color: hsl(var(--primary-foreground));
  }

  .secondary {
    background-color: hsl(var(--secondary));
    color: hsl(var(--secondary-foreground));
  }

  .muted {
    background-color: hsl(var(--muted));
    color: hsl(var(--muted-foreground));
  }

  .accent {
    background-color: hsl(var(--accent));
    color: hsl(var(--accent-foreground));
  }

  .destructive {
    background-color: hsl(var(--destructive));
    color: hsl(var(--destructive-foreground));
  }

  .ring {
    box-shadow: 0 0 0 3px hsl(var(--ring));
  }

  /* Radius styles */
  .rounded-lg {
    border-radius: var(--radius);
  }

  .rounded-md {
    border-radius: calc(var(--radius) - 2px);
  }

  .rounded-sm {
    border-radius: calc(var(--radius) - 4px);
  }
}
